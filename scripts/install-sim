#!/bin/bash

# https://github.blog/changelog/2025-07-11-upcoming-changes-to-macos-hosted-runners-macos-latest-migration-and-xcode-support-policy-updates/#xcode-support-policy-update


# https://github.com/actions/runner-images/issues/12758#issuecomment-3189512995
# Necessary to avoid random `Finding content...Unable to connect to simulator.`
echo "[install-sim] Setting DEVELOPER_DIR and shutting down simulators..."
export DEVELOPER_DIR="/Applications/Xcode_16.app/Contents/Developer"
sudo pkill -9 -f CoreSimulator
xcrun simctl shutdown all || true


# https://github.com/actions/runner-images/issues/551#issuecomment-2592352081


# https://github.com/actions/runner-images/blob/main/images/macos/macos-15-arm64-Readme.md#installed-sdks
echo "[install-sim] Downloading iOS platform..."
sudo xcodebuild -downloadPlatform iOS


# https://github.com/actions/runner-images/blob/main/images/macos/macos-15-arm64-Readme.md#installed-simulators
echo "[install-sim] Creating iPhone SE (3rd generation) simulator..."
xcrun simctl create "iPhone SE (3rd generation)" "com.apple.CoreSimulator.SimDeviceType.iPhone-SE-3rd-generation" "com.apple.CoreSimulator.SimRuntime.iOS-18-0"

echo "[install-sim] Booting simulator..."
xcrun simctl boot "iPhone SE (3rd generation)" || true
echo "[install-sim] Opening Simulator app..."
open -a Simulator

echo "[install-sim] Waiting for simulator to be fully booted..."
SIM_UDID=$(xcrun simctl list devices | grep 'iPhone SE (3rd generation)' | grep -oE '[A-F0-9\-]{36}' | head -n 1)
TIMEOUT=180
ELAPSED=0
while [[ $(xcrun simctl list | grep "$SIM_UDID" | grep -c "Booted") -eq 0 && $ELAPSED -lt $TIMEOUT ]]; do
  sleep 2
  ELAPSED=$((ELAPSED+2))
done
if [[ $ELAPSED -ge $TIMEOUT ]]; then
  echo "[install-sim] Simulator failed to boot within $TIMEOUT seconds" >&2
  exit 1
fi
echo "[install-sim] Simulator is booted and ready."
