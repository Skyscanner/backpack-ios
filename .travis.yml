# references:
# * http://www.objc.io/issue-6/travis-ci.html
# * https://github.com/supermarin/xcpretty#usage

# $MAIN_STAGE is used to selectively run only certain steps on the
# latest iOS version. For example snapshot tests are only ran for the
# latest version.
osx_image: xcode9.4
language: objective-c
cache:
  cocoapods: true
  bundler: true
  directories:
    - node_modules
matrix:
  include:
    - osx_image: xcode9.4
      env: BUILD_SDK=iphonesimulator11.4 DESTINATION="platform=iOS Simulator,name=iPhone 8" MAIN_STAGE="true"
    - osx_image: xcode8.3
      env: BUILD_SDK=iphonesimulator10.3 DESTINATION="platform=iOS Simulator,name=iPhone 7" SNAPSHOT_TESTS="false" MAIN_STAGE="false"
before_install:
  # The xcode8.3 image has a version of nvm that doesn't know about the `lts/carbon`
  # alias so we specify the version directly.
  - nvm install 8.12.0
  - '[ "$MAIN_STAGE" = true ] && npm install -g greenkeeper-lockfile@1 || true'
install:
  - npm install
  - bundle install
  - bundle exec pod repo update
  - (cd Example && bundle exec pod install)
before_script: '[ "$MAIN_STAGE" = true ] && greenkeeper-lockfile-update || true'
script:
  - npm run build
  - '[ "$MAIN_STAGE" = true ] && ./scripts/check-pristine-state package-lock.json || true'
  - '[ "$MAIN_STAGE" = true ] && [ "$TRAVIS_TAG" ] && rake "docs[`./docs/versions/$TRAVIS_TAG`]"'
  - '[ "$MAIN_STAGE" = true ] && [ "$TRAVIS_TAG" ] && echo "<!DOCTYPE html> <html> <script type=\"text/javascript\"> window.location = \"/ios/versions/latest\"; </script> </html>" > ./docs/index.html'
  - '[ "$MAIN_STAGE" = true ] && [ "$TRAVIS_TAG" ] && mkdir ./docs/versions/latest && echo "<!DOCTYPE html> <html> <script type=\"text/javascript\"> window.location = \"/ios/versions/$TRAVIS_TAG\"; </script> </html>" > ./docs/versions/latest/index.html'
  - (cd Example && bundle exec rake ci)
after_script: '[ "$MAIN_STAGE" = true ] && greenkeeper-lockfile-upload || true'
branches:
  only:
    - master
    - /^greenkeeper/.*$/
env:
  global:
    - secure: qKO1dhfy5WsvI1bIeTLA+V89DoYd2HzbNJ72mK71FF/vEewfDOyxDA7TbBc4ogwpKZv8YZdIahDZe+BdR12ICm5h5J3sV7uqVAm1TnJr79k+G/YfrNtevAxfv1Ja9oYed7brqz8MkxtzM4An8o9ncmV1T9fDxJExyDvWGF6YkN46QXuz7wBg7jrRZ/P/WAvrdYXtisXjhMQjWQOzgF/6DKhexGHirrE/IE26AmJA3akSbYZn1sQSxQXyzX4cfabewHODEjxtHWWQr97yYvmKY2bCRbFN+IxPY7/wFCjKv9IKePKs4tajlwsj7gknxJC7PqdJOqjSGSFvbm98WJ66dFKzZbQpYaGz3v87w6EmcQp7xaKjmcqThDGHtKSPLtppKedFki0wAkZSQyE+vnqVV2eCpY8JLqweoPIaXw3eHDU7Q/4xqSXzb7sMCEu3l4W2DQ/ZanRQkQwlwslleAK+QHyFfnOkGYJWr2EoB3kLqIbgyvEn8+LOH6GhFOR5Z9Rh2REAqCXgWCEMRaIycDigJS+9OCxZlpP740EtqCQsASKx/cEoz8lbEGA6bQWGyjbGE5XsSDx6gMUszIDMK+e48KqKatLosMkPDM1hyGVwxyRf8bh7Ske8NIfJ0Whw667Qo/5UWMtC9OiG9NZ+iSLbur9Gtq/X7MEZDaM6Y5BnB2w=
