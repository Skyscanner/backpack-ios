name: Build

on:
  workflow_call:

defaults:
  run:
    shell: bash -l {0}

jobs:
  Setup:
    name: Install Dependencies
    runs-on: macos-latest
    permissions:
      statuses: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - name: Verify Bundler Version
        run: if [[ $(cat Gemfile.lock | sed -n '/BUNDLED WITH/{n;p;}' | sed '/^$/d;s/[[:blank:]]//g') != "2.2.3" ]]; then echo "Error - Gemfile.lock should be bundled with bundler 2.2.3"; exit 64; fi

      - name: Set Ruby version
        uses: ruby/setup-ruby@v1 # Sets ruby version via `.ruby-version`

  Lint:
    name: Lint Project
    runs-on: macos-latest
    needs: [Setup]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Node modules
        uses: actions/cache@v4
        id: cache_node_modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: nvm install
        run: nvm install

      - name: NPM ci
        if: steps.cache_node_modules.outputs.cache-hit != 'true'
        run: nvm use && npm ci

      - name: Run NPM build
        run: npm run build

      - name: Cache Bundler install Gems
        uses: actions/cache@v4
        id: cache_bundler_install_gems
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ env.ImageVersion }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-${{ env.ImageVersion }}

      - name: Cache Pods
        uses: actions/cache@v4
        id: cache_pods
        with:
          path: Example/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Bundle Install
        run: bundle install --jobs 4 --retry 3

      - name: Pod Install
        if: steps.cache_pods.outputs.cache-hit != 'true'
        run: bundle exec pod install
        working-directory: Example

      - name: Install clang-format
        run: brew install clang-format

      - name: Check pristine
        run: ./scripts/lint

      - name: Run Swiftlint
        run: Pods/SwiftLint/swiftlint lint --strict --config .swiftlint.yml
        working-directory: Example

      - name: Run danger
        run: npm run danger
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  AnalyzePods:
    name: Analyzing pods
    runs-on: macos-latest
    needs: [Setup]
    strategy:
      fail-fast: false
      matrix:
        schemes: [common, uikit, swiftui]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Bundler install Gems
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ env.ImageVersion }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-${{ env.ImageVersion }}

      - name: Cache Pods
        uses: actions/cache@v4
        with:
          path: Example/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Bundle Install
        run: bundle install --jobs 4 --retry 3

      - name: Pod Install
        run: bundle exec pod install
        working-directory: Example

      - name: Select Xcode 14
        run: sudo xcode-select --switch /Applications/Xcode_14.2.app

      - name: Analyze
        run: ./scripts/ci ${{ matrix.schemes }} analysis
  TestPods:
    name: Testing Pods
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        schemes: [uikit]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Bundler install Gems
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ env.ImageVersion }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-${{ env.ImageVersion }}

      - name: Cache Pods
        uses: actions/cache@v4
        with:
          path: Example/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Bundle Install
        run: bundle install --jobs 4 --retry 3

      - name: Pod Install
        run: bundle exec pod install
        working-directory: Example

      - name: Select Xcode 14
        run: sudo xcode-select --switch /Applications/Xcode_14.2.app

      - name: Run Tests
        run: ./scripts/ci ${{ matrix.schemes }} test

  Screenshots:
    name: Screenshots tests
    runs-on: macos-latest
    needs: [Setup]
    permissions:
      pull-requests: write
      contents: write
    timeout-minutes: 20
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Bundler install Gems
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ env.ImageVersion }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-${{ env.ImageVersion }}

      - name: Cache Pods
        uses: actions/cache@v4
        with:
          path: Example/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Bundle Install
        run: bundle install --jobs 4 --retry 3

      - name: Pod Install
        run: bundle exec pod install
        working-directory: Example

      - name: Select Xcode 14
        run: sudo xcode-select --switch /Applications/Xcode_14.2.app
      
      - name: Screenshot Tests
        id: screenshotTests
        run: |
          ./scripts/record_screenshot_tests.sh

          changedFiles=`git status --porcelain` && echo "CHANGED_FILES=${changedFiles//$'\n'/'%0A'}" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Check snapshot changes
        id: checkSnapshotChanges
        if: ${{ github.event_name != 'pull_request' }}
        run: ./scripts/lint

      - name: Commit changes
        if: ${{ github.event_name == 'pull_request' && steps.screenshotTests.outputs.CHANGED_FILES != '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git remote set-url origin https://x-access-token:$GITHUB_TOKEN@github.com/${{ github.repository }}
          git fetch origin $GITHUB_HEAD_REF
          git checkout $GITHUB_HEAD_REF
          git add .
          git diff-index --quiet HEAD || git commit -m "Updated snapshots"
          git push

  UploadArtifacts:
    name: Upload Artifacts
    runs-on: macos-latest
    needs: [TestPods]
    steps:
      - name: Save assets
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: FailureDiffs
          path: Example/BackpackTests/FailureDiffs